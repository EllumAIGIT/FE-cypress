name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop, staging ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scans weekly
    - cron: '0 2 * * 1'

jobs:
  # 🔒 Basic Security Scan
  security:
    name: 🔒 Security & Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for outdated packages
      run: npm outdated || true
      
    - name: Run ESLint
      run: npm run lint || true
      
    - name: Run Prettier check
      run: npm run format:check || true

  # 🧪 Test Suite
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    needs: security
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox]
        node-version: [18, 20]
    
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Cypress cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/Cypress
        key: cypress-cache-${{ runner.os }}-${{ matrix.browser }}-${{ matrix.node-version }}
        
    - name: Run Cypress tests
      uses: cypress-io/github-action@v6
      with:
        browser: ${{ matrix.browser }}
        record: false
        parallel: true
        group: 'Tests - ${{ matrix.browser }}'
        spec: 'cypress/e2e/**/*.cy.js'
        config-file: cypress.config.js
        
    - name: Generate test reports
      if: always()
      run: |
        npm install -g mochawesome-report-generator
        mkdir -p cypress/results
        npx cypress run --reporter mochawesome --spec "cypress/e2e/**/*.cy.js" || true
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}-${{ matrix.node-version }}
        path: |
          cypress/screenshots/
          cypress/videos/
          cypress/reports/
        retention-days: 30

  # 🚀 Deploy to Staging
  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' && success()
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build || echo "Build step not configured"
      
    - name: Deploy to staging
      run: |
        echo "🚀 Deploying to staging..."
        # Add your staging deployment commands here
        # Example: aws s3 sync dist/ s3://staging-bucket/
        
    - name: Health check
      run: |
        echo "🏥 Running health checks..."
        # Add your health check commands here

  # 🚀 Deploy to Production
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && success()
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build || echo "Build step not configured"
      
    - name: Deploy to production
      run: |
        echo "🚀 Deploying to production..."
        # Add your production deployment commands here
        
    - name: Production health check
      run: |
        echo "🏥 Running production health checks..."

  # 🔔 Basic Notifications
  notify:
    name: 🔔 Notifications
    runs-on: ubuntu-latest
    needs: [test, deploy-staging, deploy-production]
    if: always()
    
    steps:
    - name: Notify on success
      if: success()
      run: |
        echo "✅ All checks passed successfully!"
        # Add your success notification logic here
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ Some checks failed!"
        # Add your failure notification logic here 